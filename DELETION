#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node * next;
};
struct node* deleteend(struct node * head)
{
	struct node*p=head;
	struct node*q=head->next;
	while(q->next!=NULL)
	{
		p=p->next;
		q=q->next;
	}
	p->next=NULL;
	free(q);
}
struct node* deleteatindex(struct node * head,int index)
{
	int i;
	struct node*p=head;
	struct node*q=head->next;
	for(i=0;i<index-1;i++)
	{
		p=p->next;
		q=q->next;
	}
	p->next=q->next;
	free(q);
}
struct node* deletebyvalue(struct node * head,int value)
{
	struct node*p=head;
	struct node*q=head->next;
	while(q->data!=value && q->next!=NULL)
	{
		p=p->next;
		q=q->next;
	}
	p->next=q->next;
	free(q);
}
struct node *deletebefore(struct node*head,int databefore)
{
	struct node*s=head;
	while(s->next->next->data!=databefore)
	{
		s=s->next;
	}
	struct node*temp=s->next;
	s->next=s->next->next;
	free(temp);
}
struct node* deletefirst(struct node * head)
{
	struct node *ptr=head;
	head=head->next;
	free(ptr);
	return head;
}
void display(struct node* p)
{
	while(p!=NULL)
	{
		printf("element is:%d\n",p->data);
		p=p->next;
	}
}
void main()
{
	struct node *head;
	struct node *second;
	struct node *third;
	struct node *fourth;
	
	head=(struct node* )malloc(sizeof(struct node));
	second=(struct node*)malloc(sizeof(struct node));
	third=(struct node*)malloc(sizeof(struct node));
	fourth=(struct node*)malloc(sizeof(struct node));
	
	head->data=7;
	head->next=second;
	second->data=10;
	second->next=third;
	third->data=13;
	third->next=fourth;
	fourth->data=15;
	fourth->next=NULL;	
	
	head=deletefirst(head);
	deleteend(head);
	deleteatindex(head,1);
	deletebyvalue(head,13);
	deletebefore(head,13);
    display(head);
}
