#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node * next;
};
void display(struct node* p)
{
	while(p!=NULL)
	{
		printf("element is:%d\n",p->data);
		p=p->next;
	}
}
int insertatbegin(struct node * head,int data)
{
	struct node *ptr;
	ptr=(struct node* )malloc(sizeof(struct node));
	ptr->data=data;
	ptr->next=head;
	return ptr;
}
int insertatend(struct node * head,int data)	`
{
    struct node *ptr;
	ptr=(struct node* )malloc(sizeof(struct node));
	ptr->data=data;
	struct node * p=head;
	while(p->next!=NULL)
	{
		p=p->next;
	}
	p->next=ptr;
	ptr->next=NULL;
	return head;
}
int insertafternode(struct node * head,struct node * prevnode,int data)
{
	struct node *ptr;
	ptr=(struct node* )malloc(sizeof(struct node));
	ptr->data=data;
	ptr->next=prevnode->next;
	prevnode->next=ptr;
	return head;
}

int insertatindex(struct node * head,int data,int index)
{
	struct node *ptr;
	ptr=(struct node* )malloc(sizeof(struct node));
	int i=0;
	struct node * p=head;
	while(i!=index-1){
		p=p->next;
		i++;
	}
	ptr->data=data;
	ptr->next=p->next;
	p->next=ptr;
	return head;
}
void main()
{
	struct node *head;
	struct node *second;
	struct node *third;
	
	head=(struct node* )malloc(sizeof(struct node));
	second=(struct node*)malloc(sizeof(struct node));
	third=(struct node*)malloc(sizeof(struct node));
	
	head->data=7;
	head->next=second;
	second->data=10;
	second->next=third;
	third->data=13;
	third->next=NULL;
	
	display(head);
	head=insertatbegin(head,50);
	display(head);
	insertatindex(head,45,2);
	display(head);
	insertatend(head,60);
	display(head);
	insertafternode(head,second,85);
	display(head);
